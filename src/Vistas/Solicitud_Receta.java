package Vistas;
import modelo.MedicamentoDAO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import modelo.PacienteDAO;
import modelo.Pacientes;
import modelo.SMedicamento;
import modelo.solicitudMedicDAO;


public class Solicitud_Receta extends javax.swing.JFrame {

    public Solicitud_Receta() {
        initComponents();
        listarMedicamentos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMedicamento = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMedicamentos = new javax.swing.JTable();
        btnBuscarMedi = new javax.swing.JButton();
        btnBuscarPaci = new javax.swing.JButton();
        txtNombredePaciente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblsolicitud = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnElimar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Paciente:");

        jLabel2.setText("Dni:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Solicitud de medicamentos");

        jLabel5.setText("Medicamento");

        tblMedicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Stock"
            }
        ));
        jScrollPane1.setViewportView(tblMedicamentos);

        btnBuscarMedi.setText("Buscar");
        btnBuscarMedi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMediActionPerformed(evt);
            }
        });

        btnBuscarPaci.setText("Buscar");
        btnBuscarPaci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPaciActionPerformed(evt);
            }
        });

        txtNombredePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombredePacienteActionPerformed(evt);
            }
        });

        jLabel6.setText("Cantidad:");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tblsolicitud.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paciente", "Medicamento", "Cantidad"
            }
        ));
        jScrollPane2.setViewportView(tblsolicitud);

        jButton4.setText("Siguiente");

        jButton5.setText("Atras");

        btnElimar.setText("Eliminar");
        btnElimar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBuscarPaci))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtNombredePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnElimar)
                        .addGap(138, 138, 138)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(txtMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscarMedi)
                        .addGap(56, 56, 56))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtMedicamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarMedi)
                    .addComponent(btnBuscarPaci))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNombredePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnElimar))
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnBuscarPaciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPaciActionPerformed
        String dniTexto = txtDni.getText().trim();

    if (dniTexto.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor, ingresa el DNI del paciente.");
        return;
    }

    try {
        int dni = Integer.parseInt(dniTexto);
        PacienteDAO dao = new PacienteDAO();
        Pacientes paciente = dao.buscarPorDni(dni);

        if (paciente != null) {
            txtNombredePaciente.setText(paciente.getNombre());
            txtNombredePaciente.setEditable(false); // Bloquea edición
        } else {
            JOptionPane.showMessageDialog(null, "Paciente no encontrado.");
            txtNombredePaciente.setText("");
        }
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "El DNI debe ser un número.");
    }
    
    }//GEN-LAST:event_btnBuscarPaciActionPerformed

    private void txtNombredePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombredePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombredePacienteActionPerformed

    private void btnBuscarMediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMediActionPerformed
        String texto = txtMedicamento.getText().trim();
    buscarMedicamentos(texto);
    
    }//GEN-LAST:event_btnBuscarMediActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String dniTexto = txtDni.getText().trim();
    String nombrePaciente = txtNombredePaciente.getText().trim();
    String cantidadTexto = txtCantidad.getText().trim();

    if (dniTexto.isEmpty() || nombrePaciente.isEmpty() || cantidadTexto.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Completa todos los campos requeridos.");
        return;
    }

    int filaSeleccionada = tblMedicamentos.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(null, "Selecciona un medicamento de la tabla.");
        return;
    }

    try {
        int dni = Integer.parseInt(dniTexto);
        int cantidad = Integer.parseInt(cantidadTexto);

        String nombreMedicamento = tblMedicamentos.getValueAt(filaSeleccionada, 0).toString(); // Columna 0 = nombre

        // Agregar a la tabla de solicitudes
        DefaultTableModel modeloSolicitud = (DefaultTableModel) tblsolicitud.getModel();
        modeloSolicitud.addRow(new Object[]{dni, nombreMedicamento, cantidad});
        solicitudMedicDAO dao = new solicitudMedicDAO();
        dao.registrarSolicitud(dni, nombreMedicamento, cantidad);

        // Limpiar cantidad después de agregar
        txtCantidad.setText("");

    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(null, "DNI y cantidad deben ser numéricos.");
    }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnElimarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimarActionPerformed
        int fila = tblsolicitud.getSelectedRow();
if (fila == -1) {
    JOptionPane.showMessageDialog(null, "Selecciona una solicitud para eliminar.");
    return;
}

int confirm = JOptionPane.showConfirmDialog(null, "¿Estás seguro de eliminar esta solicitud?", "Confirmar", JOptionPane.YES_NO_OPTION);
if (confirm != JOptionPane.YES_OPTION) {
    return;
}

try {
    int dni = Integer.parseInt(tblsolicitud.getValueAt(fila, 0).toString());
    String nombreMedicamento = tblsolicitud.getValueAt(fila, 1).toString();

    // Eliminar de la base de datos
    solicitudMedicDAO dao = new solicitudMedicDAO();
    dao.eliminarSolicitud(dni, nombreMedicamento);

    // Eliminar de la tabla visual
    DefaultTableModel modelo = (DefaultTableModel) tblsolicitud.getModel();
    modelo.removeRow(fila);

} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error al eliminar: " + e.getMessage());
}
    }//GEN-LAST:event_btnElimarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Solicitud_Receta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Solicitud_Receta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Solicitud_Receta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Solicitud_Receta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Solicitud_Receta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscarMedi;
    private javax.swing.JButton btnBuscarPaci;
    private javax.swing.JButton btnElimar;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblMedicamentos;
    private javax.swing.JTable tblsolicitud;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtMedicamento;
    private javax.swing.JTextField txtNombredePaciente;
    // End of variables declaration//GEN-END:variables
private void buscarMedicamentos(String texto) {
    MedicamentoDAO dao = new MedicamentoDAO();
    List<SMedicamento> lista = dao.buscarPorNombre(texto);

    DefaultTableModel model = (DefaultTableModel) tblMedicamentos.getModel();
    model.setRowCount(0); // Limpiar la tabla antes de agregar nuevos resultados

    for (SMedicamento m : lista) {
        model.addRow(new Object[]{m.getNombre(), m.getStock()});
    }
}
private void listarMedicamentos() {
    MedicamentoDAO dao = new MedicamentoDAO();
    DefaultTableModel modelo = (DefaultTableModel) tblMedicamentos.getModel();
    modelo.setRowCount(0); // Limpiar tabla

    for (SMedicamento m : dao.listar()) {
        modelo.addRow(new Object[]{m.getNombre(), m.getStock()});
    }
}
}
